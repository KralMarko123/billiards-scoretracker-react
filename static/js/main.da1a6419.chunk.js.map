{"version":3,"sources":["Components/Scoreboard/Scoreboard.module.css","Components/PlayerSelection/PlayerSelection.module.css","Components/UI/Button/Button.module.css","App.module.css","Components/Menu/MenuItem.module.css","Components/Menu/Menu.module.css","Components/PlayerSelection/Player.module.css","Components/PlayerSelection/PlayerList.module.css","Components/UI/Card/Card.module.css","Context/app-context.js","Components/Menu/MenuItem.js","Components/Menu/Menu.js","Components/UI/Button/Button.js","Components/PlayerSelection/Player.js","Components/PlayerSelection/PlayerList.js","Components/PlayerSelection/PlayerSelection.js","Components/Scoreboard/Scoreboard.js","Components/UI/Card/Card.js","App.js","reportWebVitals.js","Context/AppContextProvider.js","index.js"],"names":["module","exports","AppContext","React","createContext","players","gameMode","menuVisible","undefined","playerSelectionVisible","gameVisible","selectMode","mode","addPlayer","name","removePlayer","id","backToMainMenu","startGame","resetScores","decreaseScore","increaseScore","MenuItem","props","disciplineNumber","appCtx","useContext","className","classes","menuItem","onClick","bind","Menu","Button","title","isScoreButton","scoreButton","buttonAction","Player","onRemove","PlayerList","removePlayerHandler","map","player","PlayerSelection","playerInputRef","useRef","useState","errorMessage","setErrorMessage","useEffect","length","left","type","placeholder","ref","event","preventDefault","newPlayerName","current","value","trim","some","right","Scoreboard","score","Card","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaulAppState","appReducer","state","action","selectedMode","updatedPlayers","playerName","newPlayer","Math","random","toString","concat","idToRemove","filter","forEach","idToDecrease","playerIndex","findIndex","playerToUpdate","idToIncrease","AppContextProvider","useReducer","appState","dispatchAction","appContext","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da1a6419.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scoreboard\":\"Scoreboard_Scoreboard__1Zqx5\",\"left\":\"Scoreboard_left__3lmjP\",\"right\":\"Scoreboard_right__2HX3Q\",\"gameMode\":\"Scoreboard_gameMode__3JLoa\",\"flicker\":\"Scoreboard_flicker__1KbGK\",\"scoreboard-table\":\"Scoreboard_scoreboard-table__1MnJL\",\"score-cell\":\"Scoreboard_score-cell__1OSCz\",\"score\":\"Scoreboard_score__1UTwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerSelection\":\"PlayerSelection_PlayerSelection__1-ofi\",\"left\":\"PlayerSelection_left__3l8Qg\",\"right\":\"PlayerSelection_right__2_Suv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__TkdsZ\",\"disabled\":\"Button_disabled__3lFaj\",\"score-button\":\"Button_score-button__16jhM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1VOg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"MenuItem_menuItem__1-JDt\",\"flicker\":\"MenuItem_flicker__1nGvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__FTOKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Player\":\"Player_Player__3Yfwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerList\":\"PlayerList_PlayerList__3xDUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1h2UM\"};","import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n  players: [],\r\n  gameMode: \"\",\r\n  menuVisible: undefined,\r\n  playerSelectionVisible: undefined,\r\n  gameVisible: undefined,\r\n  selectMode: (mode) => {},\r\n  addPlayer: (name) => {},\r\n  removePlayer: (id) => {},\r\n  backToMainMenu: () => {},\r\n  startGame: () => {},\r\n  resetScores: () => {},\r\n  decreaseScore: (id) => {},\r\n  increaseScore: (id) => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import { useContext } from \"react\";\r\nimport AppContext from \"../../Context/app-context\";\r\nimport classes from \"./MenuItem.module.css\";\r\n\r\nconst MenuItem = (props) => {\r\n  const disciplineNumber = props.disciplineNumber;\r\n  const appCtx = useContext(AppContext);\r\n\r\n  const selectedModeHandler = (mode) => {\r\n    appCtx.selectMode(mode);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.menuItem}\r\n      onClick={selectedModeHandler.bind(null, disciplineNumber)}\r\n    >\r\n      <span>{disciplineNumber}</span>\r\n      <span>Ball</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import MenuItem from \"./MenuItem\";\r\nimport classes from \"./Menu.module.css\";\r\n\r\n\r\nconst Menu = () => {\r\n\r\n  return (\r\n    <div className={classes.Menu}>\r\n      <MenuItem disciplineNumber=\"8\" />\r\n      <MenuItem disciplineNumber=\"9\" />\r\n      <MenuItem disciplineNumber=\"10\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  /*VARIABLES*/\r\n  const title = props.title;\r\n  const isScoreButton = props.scoreButton;\r\n\r\n  /*HANDLERS*/\r\n  return (\r\n    <button\r\n      className={`${classes.Button} ${\r\n        isScoreButton && classes[\"score-button\"]\r\n      }`}\r\n      onClick={props.buttonAction}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"../UI/Button/Button\";\r\nimport classes from \"./Player.module.css\";\r\n\r\nconst Player = (props) => {\r\n  return (\r\n    <li className={classes.Player}>\r\n      <p>{props.name}</p>\r\n      <Button title={\"X\"} buttonAction={props.onRemove} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { useContext } from \"react\";\r\nimport AppContext from \"../../Context/app-context\";\r\nimport Player from \"./Player\";\r\nimport classes from \"./PlayerList.module.css\";\r\n\r\nconst PlayerList = (props) => {\r\n  /*HANDLERS*/\r\n  const removePlayerHandler = (id) => {\r\n    appCtx.removePlayer(id);\r\n  };\r\n\r\n  /*VARIABLES*/\r\n  const appCtx = useContext(AppContext);\r\n\r\n  const players = appCtx.players.map((player) => (\r\n    <Player\r\n      key={player.id}\r\n      id={player.id}\r\n      name={player.name}\r\n      onRemove={removePlayerHandler.bind(null, player.id)}\r\n    />\r\n  ));\r\n\r\n  return <ul className={classes.PlayerList}>{players}</ul>;\r\n};\r\n\r\nexport default PlayerList;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport AppContext from \"../../Context/app-context\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport classes from \"./PlayerSelection.module.css\";\r\n\r\nconst PlayerSelection = (props) => {\r\n  /*VARIABLES*/\r\n  const playerInputRef = useRef();\r\n  const appCtx = useContext(AppContext);\r\n  const [errorMessage, setErrorMessage] = useState(\"No Players Yet.\");\r\n\r\n  useEffect(() => {\r\n    if (appCtx.players.length === 0) {\r\n      setErrorMessage(\"No Players Yet.\");\r\n    }\r\n  }, [appCtx.players]);\r\n\r\n  /*HANDLERS*/\r\n  const addedNewPlayerHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPlayerName = playerInputRef.current.value.trim();\r\n\r\n    if (\r\n      newPlayerName === \"\" ||\r\n      appCtx.players.some((player) => player.name === newPlayerName)\r\n    ) {\r\n      return;\r\n    } else if (newPlayerName.length > 12) {\r\n      playerInputRef.current.value = \"\";\r\n      playerInputRef.current.placeholder = \"Please enter a valid name.\";\r\n    } else {\r\n      playerInputRef.current.value = \"\";\r\n      playerInputRef.current.placeholder = \"Name Here...\";\r\n      appCtx.addPlayer(newPlayerName);\r\n      setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const startGameHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (appCtx.players.length > 0) {\r\n      appCtx.startGame();\r\n    } else {\r\n      setErrorMessage(\"Can't start a game with no players.\");\r\n    }\r\n  };\r\n\r\n  const backToMenuHandler = (event) => {\r\n    event.preventDefault();\r\n    appCtx.backToMainMenu();\r\n    playerInputRef.current.placeholder = \"Name Here...\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.PlayerSelection}>\r\n      <form className={classes.left}>\r\n        <input type=\"text\" placeholder=\"Name Here...\" ref={playerInputRef} />\r\n        <Button title=\"Add Player\" buttonAction={addedNewPlayerHandler} />\r\n        <Button title=\"Start Game\" buttonAction={startGameHandler} />\r\n        <Button title=\"Back To Main Menu\" buttonAction={backToMenuHandler} />\r\n      </form>\r\n      <div className={classes.right}>\r\n        {appCtx.players.length > 0 ? <PlayerList /> : <h1>{errorMessage}</h1>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerSelection;\r\n","import { useContext } from \"react\";\r\nimport AppContext from \"../../Context/app-context\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./Scoreboard.module.css\";\r\nconst Scoreboard = () => {\r\n  /*VARIABLES*/\r\n  const appCtx = useContext(AppContext);\r\n  const gameMode = appCtx.gameMode;\r\n\r\n  /*HANDLERS*/\r\n  const backToMenuHandler = () => {\r\n    appCtx.backToMainMenu();\r\n  };\r\n\r\n  const resetScoresHandler = () => {\r\n    appCtx.resetScores();\r\n  };\r\n\r\n  const decreaseScore = (id) => {\r\n    appCtx.decreaseScore(id);\r\n  };\r\n  const increaseScore = (id) => {\r\n    appCtx.increaseScore(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Scoreboard}>\r\n      <div className={classes.left}>\r\n        <div className={classes.gameMode}>\r\n          <span>{gameMode}</span>\r\n          <span>Ball</span>\r\n        </div>\r\n        <Button title=\"Back To Main Menu\" buttonAction={backToMenuHandler} />\r\n        <Button title=\"Reset Scores\" buttonAction={resetScoresHandler} />\r\n      </div>\r\n      <div className={classes.right}>\r\n        <table className={classes[\"scoreboard-table\"]}>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appCtx.players.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>{player.name}</td>\r\n                <td className={classes[\"score-cell\"]}>\r\n                  <Button\r\n                    title=\"-\"\r\n                    buttonAction={decreaseScore.bind(null, player.id)}\r\n                    scoreButton={true}\r\n                  />\r\n                  <span className={classes.score}>{player.score}</span>\r\n                  <Button\r\n                    title=\"+\"\r\n                    buttonAction={increaseScore.bind(null, player.id)}\r\n                    scoreButton={true}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.Card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\nimport classes from \"./App.module.css\";\nimport Menu from \"./Components/Menu/Menu\";\nimport PlayerSelection from \"./Components/PlayerSelection/PlayerSelection\";\nimport Scoreboard from \"./Components/Scoreboard/Scoreboard\";\nimport Card from \"./Components/UI/Card/Card\";\nimport AppContext from \"./Context/app-context\";\n\nconst App = () => {\n  /*VARIABLES*/\n  const appCtx = React.useContext(AppContext);\n  const menuVisible = appCtx.menuVisible;\n  const playerSelectionVisible = appCtx.playerSelectionVisible;\n  const gameVisible = appCtx.gameVisible;\n\n  return (\n    <div className={classes.App}>\n      {menuVisible ? <h1>Choose A Game.</h1> : null}\n      {playerSelectionVisible ? <h1>Choose Players.</h1> : null}\n      {gameVisible ? <h1>Scoreboard.</h1> : null}\n      <Card>\n        {menuVisible ? <Menu /> : null}\n        {playerSelectionVisible ? <PlayerSelection /> : null}\n        {gameVisible ? <Scoreboard /> : null}\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useReducer } from \"react\";\r\nimport AppContext from \"./app-context\";\r\n\r\n/*DEFAULT APP STATE*/\r\nconst defaulAppState = {\r\n  players: [],\r\n  gameMode: \"\",\r\n  menuVisible: true,\r\n  playerSelectionVisible: false,\r\n  gameVisible: false,\r\n};\r\n\r\n/*REDUCER LOGIC*/\r\nconst appReducer = (state, action) => {\r\n  /*SELECTED MODE LOGIC*/\r\n  if (action.type === \"MODE_SELECTED\") {\r\n    return {\r\n      ...state,\r\n      gameMode: action.selectedMode,\r\n      menuVisible: false,\r\n      playerSelectionVisible: true,\r\n    };\r\n  }\r\n\r\n  /*ADDED PLAYER LOGIC*/\r\n  if (action.type === \"ADDED_PLAYER\") {\r\n    let newPlayerName = action.playerName;\r\n    let updatedPlayers;\r\n\r\n    let newPlayer = {\r\n      id: newPlayerName + Math.random.toString(),\r\n      name: newPlayerName,\r\n      score: 0,\r\n    };\r\n\r\n    updatedPlayers = state.players.concat(newPlayer);\r\n    return { ...state, players: updatedPlayers };\r\n  }\r\n\r\n  /*REMOVED PLAYER LOGIC*/\r\n  if (action.type === \"REMOVED_PLAYER\") {\r\n    let idToRemove = action.idToRemove;\r\n    let updatedPlayers;\r\n\r\n    updatedPlayers = state.players.filter((player) => player.id !== idToRemove);\r\n    return { ...state, players: updatedPlayers };\r\n  }\r\n\r\n  /*BACK TO MAIN MENU LOGIC*/\r\n  if (action.type === \"BACK_TO_MAIN_MENU\") {\r\n    return {\r\n      players: [],\r\n      gameMode: \"\",\r\n      menuVisible: true,\r\n      playerSelectionVisible: false,\r\n      gameVisible: false,\r\n    };\r\n  }\r\n\r\n  /*STARTED GAME LOGIC*/\r\n  if (action.type === \"STARTED_GAME\") {\r\n    return {\r\n      ...state,\r\n      menuVisible: false,\r\n      playerSelectionVisible: false,\r\n      gameVisible: true,\r\n    };\r\n  }\r\n\r\n  /*RESET SCORES LOGIC*/\r\n  if (action.type === \"RESET_SCORES\") {\r\n    state.players.forEach((player) => {\r\n      player.score = 0;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n\r\n  /*DECREASE SCORE LOGIC*/\r\n  if (action.type === \"DECREASED_SCORE\") {\r\n    let idToDecrease = action.idToDecrease;\r\n\r\n    let playerIndex = state.players.findIndex(\r\n      (player) => player.id === idToDecrease\r\n    );\r\n    let playerToUpdate = state.players[playerIndex];\r\n    let updatedPlayers = state.players;\r\n\r\n    if (playerToUpdate.score > 0) {\r\n      playerToUpdate.score--;\r\n    }\r\n    updatedPlayers[playerIndex] = playerToUpdate;\r\n\r\n    return {\r\n      ...state,\r\n      players: updatedPlayers,\r\n    };\r\n  }\r\n\r\n  /*INCREASE SCORE LOGIC*/\r\n  if (action.type === \"INCREASED_SCORE\") {\r\n    let idToIncrease = action.idToIncrease;\r\n    let playerIndex = state.players.findIndex(\r\n      (player) => player.id === idToIncrease\r\n    );\r\n\r\n    let playerToUpdate = state.players[playerIndex];\r\n    playerToUpdate.score++;\r\n    let updatedPlayers = state.players;\r\n    updatedPlayers[playerIndex] = playerToUpdate;\r\n\r\n    return {\r\n      ...state,\r\n      players: updatedPlayers,\r\n    };\r\n  }\r\n\r\n  return defaulAppState;\r\n};\r\n\r\nconst AppContextProvider = (props) => {\r\n  /*HANDLERS*/\r\n  const selectedModeHandler = (mode) => {\r\n    dispatchAction({\r\n      type: \"MODE_SELECTED\",\r\n      selectedMode: mode,\r\n    });\r\n  };\r\n\r\n  const addedPlayerHandler = (name) => {\r\n    dispatchAction({\r\n      type: \"ADDED_PLAYER\",\r\n      playerName: name,\r\n    });\r\n  };\r\n\r\n  const removedPlayerHandler = (id) => {\r\n    dispatchAction({\r\n      type: \"REMOVED_PLAYER\",\r\n      idToRemove: id,\r\n    });\r\n  };\r\n\r\n  const backToMainMenuHandler = () => {\r\n    dispatchAction({\r\n      type: \"BACK_TO_MAIN_MENU\",\r\n    });\r\n  };\r\n\r\n  const startGameHandler = () => {\r\n    dispatchAction({\r\n      type: \"STARTED_GAME\",\r\n    });\r\n  };\r\n\r\n  const resetScoresHandler = () => {\r\n    dispatchAction({\r\n      type: \"RESET_SCORES\",\r\n    });\r\n  };\r\n\r\n  const decreaseScoreHandler = (id) => {\r\n    dispatchAction({\r\n      type: \"DECREASED_SCORE\",\r\n      idToDecrease: id,\r\n    });\r\n  };\r\n\r\n  const increaseScoreHandler = (id) => {\r\n    dispatchAction({\r\n      type: \"INCREASED_SCORE\",\r\n      idToIncrease: id,\r\n    });\r\n  };\r\n  /*VARIABLES*/\r\n  const [appState, dispatchAction] = useReducer(appReducer, defaulAppState);\r\n\r\n  const appContext = {\r\n    players: appState.players,\r\n    gameMode: appState.gameMode,\r\n    menuVisible: appState.menuVisible,\r\n    playerSelectionVisible: appState.playerSelectionVisible,\r\n    gameVisible: appState.gameVisible,\r\n    selectMode: selectedModeHandler,\r\n    addPlayer: addedPlayerHandler,\r\n    removePlayer: removedPlayerHandler,\r\n    backToMainMenu: backToMainMenuHandler,\r\n    startGame: startGameHandler,\r\n    resetScores: resetScoresHandler,\r\n    decreaseScore: decreaseScoreHandler,\r\n    increaseScore: increaseScoreHandler,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={appContext}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppContextProvider from \"./Context/AppContextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}